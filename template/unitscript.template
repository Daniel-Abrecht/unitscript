#ifndef US_UNITSCRIPT_TEMPLATE
#define US_UNITSCRIPT_TEMPLATE

#include <stdbool.h>
#include <sys/types.h>

struct passwd;
struct group;

enum startcheck {
  STARTCHECK_UNKNOWN,
  STARTCHECK_EXIT,
  STARTCHECK_START,
  STARTCHECK_NOTIFICATION
};

enum us_logging {
  US_LOGGING_DEFAULT,
  US_LOGGING_STDIO,
  US_LOGGING_SYSLOG,
  US_LOGGING_NONE
};

#define PARSABLE_STRUCTURES \
  BLOCK( unitscript, ( \
    ENTRY( string, "user", user ) \
    ENTRY( integer, "uid", uid ) \
    ENTRY( string, "group", group ) \
    ENTRY( integer, "gid", gid ) \
    ENTRY( string, "type", type ) \
    ENTRY( string, "start check", startcheck_str ) \
    ENTRY( integer, "notifyfd", notifyfd ) \
    ENTRY( string, "logging", logging_str ) \
    ENTRY( string, "pidfile", pidfile ) \
    ENTRY( boolean, "manage pidfile", manage_pidfile ) \
    ENTRY( integer, "umask", umask ) \
    ENTRY( map, "env", env ) \
    ENTRY( string, "program", program ) \
    PRIVATE( \
      const char* file; \
      struct passwd* userinfo; \
      struct group* groupinfo; \
      gid_t* member_groups; \
      size_t member_groups_count; \
      enum startcheck startcheck; \
      enum us_logging logging; \
    ) \
  ))

#include <US/yamlparser.generator>
#endif
